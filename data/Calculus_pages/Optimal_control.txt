Optimal control theory is a branch of applied mathematics that deals with finding a control law for a dynamical system over a period of time such that an objective function is optimized. It has numerous applications in both science and engineering. For example, the dynamical system might be a spacecraft with controls corresponding to rocket thrusters, and the objective might be to reach the moon with minimum fuel expenditure. Or the dynamical system could be a nation's economy, with the objective to minimize unemployment; the controls in this case could be fiscal and monetary policy.
Optimal control is an extension of the calculus of variations, and is a mathematical optimization method for deriving control policies. The method is largely due to the work of Lev Pontryagin and Richard Bellman in the 1950s, after contributions to calculus of variations by Edward J. McShane. Optimal control can be seen as a control strategy in control theory.


== General method ==
Optimal control deals with the problem of finding a control law for a given system such that a certain optimality criterion is achieved. A control problem includes a cost functional that is a function of state and control variables. An optimal control is a set of differential equations describing the paths of the control variables that minimize the cost function. The optimal control can be derived using Pontryagin's maximum principle (a necessary condition also known as Pontryagin's minimum principle or simply Pontryagin's Principle), or by solving the Hamilton–Jacobi–Bellman equation (a sufficient condition).
We begin with a simple example. Consider a car traveling in a straight line on a hilly road. The question is, how should the driver press the accelerator pedal in order to minimize the total traveling time? In this example, the term control law refers specifically to the way in which the driver presses the accelerator and shifts the gears. The system consists of both the car and the road, and the optimality criterion is the minimization of the total traveling time. Control problems usually include ancillary constraints. For example, the amount of available fuel might be limited, the accelerator pedal cannot be pushed through the floor of the car, speed limits, etc.
A proper cost function will be a mathematical expression giving the traveling time as a function of the speed, geometrical considerations, and initial conditions of the system. Constraints are often interchangeable with the cost function.
Another related optimal control problem may be to find the way to drive the car so as to minimize its fuel consumption, given that it must complete a given course in a time not exceeding some amount. Yet another related control problem may be to minimize the total monetary cost of completing the trip, given assumed monetary prices for time and fuel.
A more abstract framework goes as follows.  Minimize the continuous-time cost functional

  
    
      
        J
        =
        Φ
        
        [
        
        
          
            x
          
        
        (
        
          t
          
            0
          
        
        )
        ,
        
          t
          
            0
          
        
        ,
        
          
            x
          
        
        (
        
          t
          
            f
          
        
        )
        ,
        
          t
          
            f
          
        
        
        ]
        +
        
          ∫
          
            
              t
              
                0
              
            
          
          
            
              t
              
                f
              
            
          
        
        
          
            L
          
        
        
        [
        
        
          
            x
          
        
        (
        t
        )
        ,
        
          
            u
          
        
        (
        t
        )
        ,
        t
        
        ]
        
        d
        ⁡
        t
      
    
    {\displaystyle J=\Phi \,[\,{\textbf {x}}(t_{0}),t_{0},{\textbf {x}}(t_{f}),t_{f}\,]+\int _{t_{0}}^{t_{f}}{\mathcal {L}}\,[\,{\textbf {x}}(t),{\textbf {u}}(t),t\,]\,\operatorname {d} t}
  subject to the first-order dynamic constraints (the state equation)

  
    
      
        
          
            
              
                x
              
              ˙
            
          
        
        (
        t
        )
        =
        
          
            a
          
        
        
        [
        
        
          
            x
          
        
        (
        t
        )
        ,
        
          
            u
          
        
        (
        t
        )
        ,
        t
        
        ]
        ,
      
    
    {\displaystyle {\dot {\textbf {x}}}(t)={\textbf {a}}\,[\,{\textbf {x}}(t),{\textbf {u}}(t),t\,],}
  the algebraic path constraints

  
    
      
        
          
            b
          
        
        
        [
        
        
          
            x
          
        
        (
        t
        )
        ,
        
          
            u
          
        
        (
        t
        )
        ,
        t
        
        ]
        ≤
        
          
            0
          
        
        ,
      
    
    {\displaystyle {\textbf {b}}\,[\,{\textbf {x}}(t),{\textbf {u}}(t),t\,]\leq {\textbf {0}},}
  and the boundary conditions

  
    
      
        
          ϕ
        
        
        [
        
        
          
            x
          
        
        (
        
          t
          
            0
          
        
        )
        ,
        
          t
          
            0
          
        
        ,
        
          
            x
          
        
        (
        
          t
          
            f
          
        
        )
        ,
        
          t
          
            f
          
        
        
        ]
        =
        0
      
    
    {\displaystyle {\boldsymbol {\phi }}\,[\,{\textbf {x}}(t_{0}),t_{0},{\textbf {x}}(t_{f}),t_{f}\,]=0}
  where 
  
    
      
        
          
            x
          
        
        (
        t
        )
      
    
    {\displaystyle {\textbf {x}}(t)}
   is the state, 
  
    
      
        
          
            u
          
        
        (
        t
        )
      
    
    {\displaystyle {\textbf {u}}(t)}
   is the control, 
  
    
      
        t
      
    
    {\displaystyle t}
   is the independent variable (generally speaking, time), 
  
    
      
        
          t
          
            0
          
        
      
    
    {\displaystyle t_{0}}
   is the initial time, and 
  
    
      
        
          t
          
            f
          
        
      
    
    {\displaystyle t_{f}}
   is the terminal time.  The terms 
  
    
      
        Φ
      
    
    {\displaystyle \Phi }
   and 
  
    
      
        
          
            L
          
        
      
    
    {\displaystyle {\mathcal {L}}}
   are called the endpoint cost  and Lagrangian, respectively.  Furthermore, it is noted that the path constraints are in general inequality constraints and thus may not be active (i.e., equal to zero) at the optimal solution.  It is also noted that the optimal control problem as stated above may have multiple solutions (i.e., the solution may not be unique).  Thus, it is most often the case that any solution 
  
    
      
        [
        
          
            
              x
            
          
          
            ∗
          
        
        (
        
          t
          
            ∗
          
        
        )
        ,
        
          
            
              u
            
          
          
            ∗
          
        
        (
        
          t
          
            ∗
          
        
        )
        ,
        
          t
          
            ∗
          
        
        ]
      
    
    {\displaystyle [{\textbf {x}}^{*}(t^{*}),{\textbf {u}}^{*}(t^{*}),t^{*}]}
   to the optimal control problem is locally minimizing.


== Linear quadratic control ==
A special case of the general nonlinear optimal control problem given in the previous section is the linear quadratic (LQ) optimal control problem.  The LQ problem is stated as follows.  Minimize the quadratic continuous-time cost functional

  
    
      
        J
        =
        
          
            
              1
              2
            
          
        
        
          
            x
          
          
            
              T
            
          
        
        (
        
          t
          
            f
          
        
        )
        
          
            S
          
          
            f
          
        
        
          x
        
        (
        
          t
          
            f
          
        
        )
        +
        
          
            
              1
              2
            
          
        
        
          ∫
          
            
              t
              
                0
              
            
          
          
            
              t
              
                f
              
            
          
        
        [
        
        
          
            x
          
          
            
              T
            
          
        
        (
        t
        )
        
          Q
        
        (
        t
        )
        
          x
        
        (
        t
        )
        +
        
          
            u
          
          
            
              T
            
          
        
        (
        t
        )
        
          R
        
        (
        t
        )
        
          u
        
        (
        t
        )
        
        ]
        
        d
        ⁡
        t
      
    
    {\displaystyle J={\tfrac {1}{2}}\mathbf {x} ^{\mathsf {T}}(t_{f})\mathbf {S} _{f}\mathbf {x} (t_{f})+{\tfrac {1}{2}}\int _{t_{0}}^{t_{f}}[\,\mathbf {x} ^{\mathsf {T}}(t)\mathbf {Q} (t)\mathbf {x} (t)+\mathbf {u} ^{\mathsf {T}}(t)\mathbf {R} (t)\mathbf {u} (t)\,]\,\operatorname {d} t}
  Subject to the linear first-order dynamic constraints

  
    
      
        
          
            
              
                x
              
              ˙
            
          
        
        (
        t
        )
        =
        
          A
        
        (
        t
        )
        
          x
        
        (
        t
        )
        +
        
          B
        
        (
        t
        )
        
          u
        
        (
        t
        )
        ,
      
    
    {\displaystyle {\dot {\mathbf {x} }}(t)=\mathbf {A} (t)\mathbf {x} (t)+\mathbf {B} (t)\mathbf {u} (t),}
  and the initial condition

  
    
      
        
          x
        
        (
        
          t
          
            0
          
        
        )
        =
        
          
            x
          
          
            0
          
        
      
    
    {\displaystyle \mathbf {x} (t_{0})=\mathbf {x} _{0}}
  A particular form of the LQ problem that arises in many control system problems is that of the linear quadratic regulator (LQR) where all of the matrices (i.e., 
  
    
      
        
          A
        
      
    
    {\displaystyle \mathbf {A} }
  , 
  
    
      
        
          B
        
      
    
    {\displaystyle \mathbf {B} }
  , 
  
    
      
        
          Q
        
      
    
    {\displaystyle \mathbf {Q} }
  , and 
  
    
      
        
          R
        
      
    
    {\displaystyle \mathbf {R} }
  ) are constant, the initial time is arbitrarily set to zero, and the terminal time is taken in the limit 
  
    
      
        
          t
          
            f
          
        
        →
        ∞
      
    
    {\displaystyle t_{f}\rightarrow \infty }
   (this last assumption is what is known as infinite horizon).  The LQR problem is stated as follows.  Minimize the infinite horizon quadratic continuous-time cost functional

  
    
      
        J
        =
        
          
            
              1
              2
            
          
        
        
          ∫
          
            0
          
          
            ∞
          
        
        [
        
        
          
            x
          
          
            
              T
            
          
        
        (
        t
        )
        
          Q
        
        
          x
        
        (
        t
        )
        +
        
          
            u
          
          
            
              T
            
          
        
        (
        t
        )
        
          R
        
        
          u
        
        (
        t
        )
        
        ]
        
        d
        ⁡
        t
      
    
    {\displaystyle J={\tfrac {1}{2}}\int _{0}^{\infty }[\,\mathbf {x} ^{\mathsf {T}}(t)\mathbf {Q} \mathbf {x} (t)+\mathbf {u} ^{\mathsf {T}}(t)\mathbf {R} \mathbf {u} (t)\,]\,\operatorname {d} t}
  Subject to the linear time-invariant first-order dynamic constraints

  
    
      
        
          
            
              
                x
              
              ˙
            
          
        
        (
        t
        )
        =
        
          A
        
        
          x
        
        (
        t
        )
        +
        
          B
        
        
          u
        
        (
        t
        )
        ,
      
    
    {\displaystyle {\dot {\mathbf {x} }}(t)=\mathbf {A} \mathbf {x} (t)+\mathbf {B} \mathbf {u} (t),}
  and the initial condition

  
    
      
        
          x
        
        (
        
          t
          
            0
          
        
        )
        =
        
          
            x
          
          
            0
          
        
      
    
    {\displaystyle \mathbf {x} (t_{0})=\mathbf {x} _{0}}
  In the finite-horizon case the matrices are restricted in that 
  
    
      
        
          Q
        
      
    
    {\displaystyle \mathbf {Q} }
   and 
  
    
      
        
          R
        
      
    
    {\displaystyle \mathbf {R} }
   are positive semi-definite and positive definite, respectively.  In the infinite-horizon case, however, the matrices 
  
    
      
        
          Q
        
      
    
    {\displaystyle \mathbf {Q} }
   and 
  
    
      
        
          R
        
      
    
    {\displaystyle \mathbf {R} }
   are not only positive-semidefinite and positive-definite, respectively, but are also constant.  These additional restrictions on

  
    
      
        
          Q
        
      
    
    {\displaystyle \mathbf {Q} }
   and 
  
    
      
        
          R
        
      
    
    {\displaystyle \mathbf {R} }
   in the infinite-horizon case are enforced to ensure that the cost functional remains positive.  Furthermore, in order to ensure that the cost function is bounded, the additional restriction is imposed that the pair 
  
    
      
        (
        
          A
        
        ,
        
          B
        
        )
      
    
    {\displaystyle (\mathbf {A} ,\mathbf {B} )}
   is controllable.  Note that the LQ or LQR cost functional can be thought of physically as attempting to minimize the control energy (measured as a quadratic form).
The infinite horizon problem (i.e., LQR) may seem overly restrictive and essentially useless because it assumes that the operator is driving the system to zero-state and hence driving the output of the system to zero. This is indeed correct. However the problem of driving the output to a desired nonzero level can be solved after the zero output one is. In fact, it can be proved that this secondary LQR problem can be solved in a very straightforward manner.  It has been shown in classical optimal control theory that the LQ (or LQR) optimal control has the feedback form

  
    
      
        
          u
        
        (
        t
        )
        =
        −
        
          K
        
        (
        t
        )
        
          x
        
        (
        t
        )
      
    
    {\displaystyle \mathbf {u} (t)=-\mathbf {K} (t)\mathbf {x} (t)}
  where 
  
    
      
        
          K
        
        (
        t
        )
      
    
    {\displaystyle \mathbf {K} (t)}
   is a properly dimensioned matrix, given as

  
    
      
        
          K
        
        (
        t
        )
        =
        
          
            R
          
          
            −
            1
          
        
        
          
            B
          
          
            
              T
            
          
        
        
          S
        
        (
        t
        )
        ,
      
    
    {\displaystyle \mathbf {K} (t)=\mathbf {R} ^{-1}\mathbf {B} ^{\mathsf {T}}\mathbf {S} (t),}
  and 
  
    
      
        
          S
        
        (
        t
        )
      
    
    {\displaystyle \mathbf {S} (t)}
   is the solution of the differential Riccati equation.  The differential Riccati equation is given as

  
    
      
        
          
            
              
                S
              
              ˙
            
          
        
        (
        t
        )
        =
        −
        
          S
        
        (
        t
        )
        
          A
        
        −
        
          
            A
          
          
            
              T
            
          
        
        
          S
        
        (
        t
        )
        +
        
          S
        
        (
        t
        )
        
          B
        
        
          
            R
          
          
            −
            1
          
        
        
          
            B
          
          
            
              T
            
          
        
        
          S
        
        (
        t
        )
        −
        
          Q
        
      
    
    {\displaystyle {\dot {\mathbf {S} }}(t)=-\mathbf {S} (t)\mathbf {A} -\mathbf {A} ^{\mathsf {T}}\mathbf {S} (t)+\mathbf {S} (t)\mathbf {B} \mathbf {R} ^{-1}\mathbf {B} ^{\mathsf {T}}\mathbf {S} (t)-\mathbf {Q} }
  For the finite horizon LQ problem, the Riccati equation is integrated backward in time using the terminal boundary condition

  
    
      
        
          S
        
        (
        
          t
          
            f
          
        
        )
        =
        
          
            S
          
          
            f
          
        
      
    
    {\displaystyle \mathbf {S} (t_{f})=\mathbf {S} _{f}}
  For the infinite horizon LQR problem, the differential Riccati equation is replaced with the algebraic Riccati equation (ARE) given as

  
    
      
        
          0
        
        =
        −
        
          S
        
        
          A
        
        −
        
          
            A
          
          
            
              T
            
          
        
        
          S
        
        +
        
          S
        
        
          B
        
        
          
            R
          
          
            −
            1
          
        
        
          
            B
          
          
            
              T
            
          
        
        
          S
        
        −
        
          Q
        
      
    
    {\displaystyle \mathbf {0} =-\mathbf {S} \mathbf {A} -\mathbf {A} ^{\mathsf {T}}\mathbf {S} +\mathbf {S} \mathbf {B} \mathbf {R} ^{-1}\mathbf {B} ^{\mathsf {T}}\mathbf {S} -\mathbf {Q} }
  Understanding that the ARE arises from infinite horizon problem, the matrices 
  
    
      
        
          A
        
      
    
    {\displaystyle \mathbf {A} }
  , 
  
    
      
        
          B
        
      
    
    {\displaystyle \mathbf {B} }
  , 
  
    
      
        
          Q
        
      
    
    {\displaystyle \mathbf {Q} }
  , and 
  
    
      
        
          R
        
      
    
    {\displaystyle \mathbf {R} }
   are all constant.  It is noted that there are in general multiple solutions to the algebraic Riccati equation and the positive definite (or positive semi-definite) solution is the one that is used to compute the feedback gain.  The LQ (LQR) problem was elegantly solved by Rudolf Kalman.


== Numerical methods for optimal control ==
Optimal control problems are generally nonlinear and therefore, generally do not have analytic solutions (e.g., like the linear-quadratic optimal control problem).  As a result, it is necessary to employ numerical methods to solve optimal control problems.  In the early years of optimal control (c. 1950s to 1980s) the favored approach for solving optimal control problems was that of indirect methods.  In an indirect method, the calculus of variations is employed to obtain the first-order optimality conditions.  These conditions result in a two-point (or, in the case of a complex problem, a multi-point) boundary-value problem.  This boundary-value problem actually has a special structure because it arises from taking the derivative of a Hamiltonian.  Thus, the resulting dynamical system is a Hamiltonian system of the form

  
    
      
        
          
            
              
                
                  
                    
                      
                        x
                      
                      ˙
                    
                  
                
              
              
                =
              
              
                ∂
                H
                
                  /
                
                ∂
                
                  λ
                
              
            
            
              
                
                  
                    
                      λ
                      ˙
                    
                  
                
              
              
                =
              
              
                −
                ∂
                H
                
                  /
                
                ∂
                
                  
                    x
                  
                
              
            
          
        
      
    
    {\displaystyle {\begin{array}{lcl}{\dot {\textbf {x}}}&=&\partial H/\partial {\boldsymbol {\lambda }}\\{\dot {\boldsymbol {\lambda }}}&=&-\partial H/\partial {\textbf {x}}\end{array}}}
  where

  
    
      
        H
        =
        
          
            L
          
        
        +
        
          
            λ
          
          
            
              T
            
          
        
        
          
            a
          
        
        −
        
          
            μ
          
          
            
              T
            
          
        
        
          
            b
          
        
      
    
    {\displaystyle H={\mathcal {L}}+{\boldsymbol {\lambda }}^{\mathsf {T}}{\textbf {a}}-{\boldsymbol {\mu }}^{\mathsf {T}}{\textbf {b}}}
  is the augmented Hamiltonian and in an indirect method, the boundary-value problem is solved (using the appropriate boundary or transversality conditions).  The beauty of using an indirect method is that the state and adjoint (i.e., 
  
    
      
        
          λ
        
      
    
    {\displaystyle {\boldsymbol {\lambda }}}
  ) are solved for and the resulting solution is readily verified to be an extremal trajectory.  The disadvantage of indirect methods is that the boundary-value problem is often extremely difficult to solve (particularly for problems that span large time intervals or problems with interior point constraints).   A well-known software program that implements indirect methods is BNDSCO.The approach that has risen to prominence in numerical optimal control since the 1980s is that of so-called direct methods.  In a direct method, the state and/or control are approximated using an appropriate function approximation (e.g., polynomial approximation or piecewise constant parameterization).  Simultaneously, the cost functional is approximated as a cost function.  Then, the coefficients of the function approximations are treated as optimization variables and the problem is "transcribed" to a nonlinear optimization problem of the form:
Minimize

  
    
      
        F
        (
        
          
            z
          
        
        )
        
      
    
    {\displaystyle F({\textbf {z}})\,}
  subject to the algebraic constraints

  
    
      
        
          
            
              
                
                  
                    g
                  
                
                (
                
                  
                    z
                  
                
                )
              
              
                =
              
              
                
                  
                    0
                  
                
              
            
            
              
                
                  
                    h
                  
                
                (
                
                  
                    z
                  
                
                )
              
              
                ≤
              
              
                
                  
                    0
                  
                
              
            
          
        
      
    
    {\displaystyle {\begin{array}{lcl}{\textbf {g}}({\textbf {z}})&=&{\textbf {0}}\\{\textbf {h}}({\textbf {z}})&\leq &{\textbf {0}}\end{array}}}
  Depending upon the type of direct method employed, the size of the nonlinear optimization problem can be quite small (e.g., as in a direct shooting or quasilinearization method), moderate (e.g. pseudospectral optimal control) or may be quite large (e.g., a direct collocation method). In the latter case (i.e., a collocation method), the nonlinear optimization problem may be literally thousands to tens of thousands of variables and constraints. Given the size of many NLPs arising from a direct method, it may appear somewhat counter-intuitive that solving the nonlinear optimization problem is easier than solving the boundary-value problem. It is, however, the fact that the NLP is easier to solve than the boundary-value problem. The reason for the relative ease of computation, particularly of a direct collocation method, is that the NLP is sparse and many well-known software programs exist (e.g., SNOPT) to solve large sparse NLPs. As a result, the range of problems that can be solved via direct methods (particularly direct collocation methods which are very popular these days) is significantly larger than the range of problems that can be solved via indirect methods. In fact, direct methods have become so popular these days that many people have written elaborate software programs that employ these methods. In particular, many such programs include DIRCOL, SOCS, OTIS, GESOP/ASTOS, DITAN. and PyGMO/PyKEP. In recent years, due to the advent of the MATLAB programming language, optimal control software in MATLAB has become more common. Examples of academically developed MATLAB software tools implementing direct methods include RIOTS,DIDO, DIRECT,, FALCON.m , and GPOPS, while an example of an industry developed MATLAB tool is PROPT. These software tools have increased significantly the opportunity for people to explore complex optimal control problems both for academic research and industrial problems. Finally, it is noted that general-purpose MATLAB optimization environments such as TOMLAB have made coding complex optimal control problems significantly easier than was previously possible in languages such as C and FORTRAN.


== Discrete-time optimal control ==
The examples thus far have shown continuous time systems and control solutions. In fact, as optimal control solutions are now often implemented digitally, contemporary control theory is now primarily concerned with discrete time systems and solutions.  The Theory of Consistent Approximations provides conditions under which solutions to a series of increasingly accurate discretized optimal control problem converge to the solution of the original, continuous-time problem.  Not all discretization methods have this property, even seemingly obvious ones.  For instance, using a variable step-size routine to integrate the problem's dynamic equations may generate a gradient which does not converge to zero (or point in the right direction) as the solution is approached.   The direct method RIOTS is based on the Theory of Consistent Approximation.


== Examples ==
A common solution strategy in many optimal control problems is to solve for the costate (sometimes called the shadow price) 
  
    
      
        λ
        (
        t
        )
      
    
    {\displaystyle \lambda (t)}
  . The costate summarizes in one number the marginal value of expanding or contracting the state variable next turn. The marginal value is not only the gains accruing to it next turn but associated with the duration of the program. It is nice when 
  
    
      
        λ
        (
        t
        )
      
    
    {\displaystyle \lambda (t)}
   can be solved analytically, but usually, the most one can do is describe it sufficiently well that the intuition can grasp the character of the solution and an equation solver can solve numerically for the values.
Having obtained 
  
    
      
        λ
        (
        t
        )
      
    
    {\displaystyle \lambda (t)}
  , the turn-t optimal value for the control can usually be solved as a differential equation conditional on knowledge of 
  
    
      
        λ
        (
        t
        )
      
    
    {\displaystyle \lambda (t)}
  . Again it is infrequent, especially in continuous-time problems, that one obtains the value of the control or the state explicitly. Usually, the strategy is to solve for thresholds and regions that characterize the optimal control and use a numerical solver to isolate the actual choice values in time.


=== Finite time ===
Consider the problem of a mine owner who must decide at what rate to extract ore from their mine. They own rights to the ore from date 
  
    
      
        0
      
    
    {\displaystyle 0}
   to date 
  
    
      
        T
      
    
    {\displaystyle T}
  . At date 
  
    
      
        0
      
    
    {\displaystyle 0}
   there is 
  
    
      
        
          x
          
            0
          
        
      
    
    {\displaystyle x_{0}}
   ore in the ground, and the time-dependent amount of ore 
  
    
      
        x
        (
        t
        )
      
    
    {\displaystyle x(t)}
   left in the ground declines at the rate of 
  
    
      
        u
        (
        t
        )
      
    
    {\displaystyle u(t)}
   that the mine owner extracts it. The mine owner extracts ore at cost 
  
    
      
        u
        (
        t
        
          )
          
            2
          
        
        
          /
        
        x
        (
        t
        )
      
    
    {\displaystyle u(t)^{2}/x(t)}
   (the cost of extraction increasing with the square of the extraction speed and the inverse of the amount of ore left) and sells ore at a constant price 
  
    
      
        p
      
    
    {\displaystyle p}
  . Any ore left in the ground at time 
  
    
      
        T
      
    
    {\displaystyle T}
   cannot be sold and has no value (there is no "scrap value"). The owner chooses the rate of extraction varying with time 
  
    
      
        u
        (
        t
        )
      
    
    {\displaystyle u(t)}
   to maximize profits over the period of ownership with no time discounting.


== See also ==


== References ==


== Further reading ==
Bertsekas, D. P. (1995). Dynamic Programming and Optimal Control. Belmont: Athena. ISBN 1-886529-11-6.
Bryson, A. E.; Ho, Y.-C. (1975). Applied Optimal Control: Optimization, Estimation and Control (Revised ed.). New York: John Wiley and Sons. ISBN 0-470-11481-9.
Fleming, W. H.; Rishel, R. W. (1975). Deterministic and Stochastic Optimal Control. New York: Springer. ISBN 0-387-90155-8.
Kamien, M. I.; Schwartz, N. L. (1991). Dynamic Optimization: The Calculus of Variations and Optimal Control in Economics and Management (Second ed.). New York: Elsevier. ISBN 0-444-01609-0.
Kirk, D. E. (1970). Optimal Control Theory: An Introduction. Englewood Cliffs: Prentice-Hall. ISBN 0-13-638098-0.
Stengel, R. F. (1994). Optimal Control and Estimation. New York: Dover (Courier). ISBN 0-486-68200-5.


== External links ==
Optimal Control Course Online
Dr. Benoît CHACHUAT: Automatic Control Laboratory – Nonlinear Programming, Calculus of Variations and Optimal Control.
DIDO - MATLAB tool for optimal control
GEKKO - Python package for optimal control
GESOP – Graphical Environment for Simulation and OPtimization

GPOPS-II – General-Purpose MATLAB Optimal Control Software
PROPT – MATLAB Optimal Control Software
OpenOCL – Open Optimal Control Library
Elmer G. Wiens: Optimal Control – Applications of Optimal Control Theory Using the Pontryagin Maximum Principle with interactive models.
Pontryagin's Principle Illustrated with Examples
On Optimal Control by Yu-Chi Ho
Pseudospectral optimal control: Part 1
Pseudospectral optimal control: Part 2